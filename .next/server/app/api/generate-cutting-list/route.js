/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-cutting-list/route";
exports.ids = ["app/api/generate-cutting-list/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgenerate-cutting-list%2Froute&page=%2Fapi%2Fgenerate-cutting-list%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-cutting-list%2Froute.ts&appDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgenerate-cutting-list%2Froute&page=%2Fapi%2Fgenerate-cutting-list%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-cutting-list%2Froute.ts&appDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_josh2030_Downloads_front_end_app_api_generate_cutting_list_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/generate-cutting-list/route.ts */ \"(rsc)/./app/api/generate-cutting-list/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-cutting-list/route\",\n        pathname: \"/api/generate-cutting-list\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-cutting-list/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\josh2030\\\\Downloads\\\\front end\\\\app\\\\api\\\\generate-cutting-list\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_josh2030_Downloads_front_end_app_api_generate_cutting_list_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1jdXR0aW5nLWxpc3QlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdlbmVyYXRlLWN1dHRpbmctbGlzdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdlbmVyYXRlLWN1dHRpbmctbGlzdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqb3NoMjAzMCU1Q0Rvd25sb2FkcyU1Q2Zyb250JTIwZW5kJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNqb3NoMjAzMCU1Q0Rvd25sb2FkcyU1Q2Zyb250JTIwZW5kJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNvQztBQUNqSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcam9zaDIwMzBcXFxcRG93bmxvYWRzXFxcXGZyb250IGVuZFxcXFxhcHBcXFxcYXBpXFxcXGdlbmVyYXRlLWN1dHRpbmctbGlzdFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2VuZXJhdGUtY3V0dGluZy1saXN0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2VuZXJhdGUtY3V0dGluZy1saXN0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9nZW5lcmF0ZS1jdXR0aW5nLWxpc3Qvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxqb3NoMjAzMFxcXFxEb3dubG9hZHNcXFxcZnJvbnQgZW5kXFxcXGFwcFxcXFxhcGlcXFxcZ2VuZXJhdGUtY3V0dGluZy1saXN0XFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgenerate-cutting-list%2Froute&page=%2Fapi%2Fgenerate-cutting-list%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-cutting-list%2Froute.ts&appDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/generate-cutting-list/route.ts":
/*!************************************************!*\
  !*** ./app/api/generate-cutting-list/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_cutting_list_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/cutting-list-generator */ \"(rsc)/./lib/cutting-list-generator.ts\");\n\n\nasync function POST(request) {\n    try {\n        const data = await request.json();\n        // Ensure cabinets object exists\n        if (!data.cabinets) {\n            console.warn(\"No cabinets data provided\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                cuttingList: []\n            });\n        }\n        const cabinets = data.cabinets;\n        // Ensure all cabinet arrays exist\n        cabinets.baseCabinets = Array.isArray(cabinets.baseCabinets) ? cabinets.baseCabinets : [];\n        cabinets.cornerBase = Array.isArray(cabinets.cornerBase) ? cabinets.cornerBase : [];\n        cabinets.wallCabinets = Array.isArray(cabinets.wallCabinets) ? cabinets.wallCabinets : [];\n        cabinets.cornerWall = Array.isArray(cabinets.cornerWall) ? cabinets.cornerWall : [];\n        cabinets.tallUnits = Array.isArray(cabinets.tallUnits) ? cabinets.tallUnits : [];\n        cabinets.endPanels = Array.isArray(cabinets.endPanels) ? cabinets.endPanels : [];\n        // Validate if we have any cabinets to process\n        const hasCabinets = cabinets.baseCabinets.length > 0 || cabinets.cornerBase.length > 0 || cabinets.wallCabinets.length > 0 || cabinets.cornerWall.length > 0 || cabinets.tallUnits.length > 0 || cabinets.endPanels.length > 0;\n        if (!hasCabinets) {\n            console.warn(\"No cabinet data found in request\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                cuttingList: []\n            });\n        }\n        // Generate cutting list using the server-side function\n        const cuttingList = (0,_lib_cutting_list_generator__WEBPACK_IMPORTED_MODULE_1__.generateCuttingList)(cabinets);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            cuttingList\n        });\n    } catch (error) {\n        console.error(\"Error generating cutting list:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate cutting list\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2dlbmVyYXRlLWN1dHRpbmctbGlzdC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEQ7QUFFTTtBQUUzRCxlQUFlRSxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNRCxRQUFRRSxJQUFJO1FBRS9CLGdDQUFnQztRQUNoQyxJQUFJLENBQUNELEtBQUtFLFFBQVEsRUFBRTtZQUNsQkMsUUFBUUMsSUFBSSxDQUFDO1lBQ2IsT0FBT1IscURBQVlBLENBQUNLLElBQUksQ0FBQztnQkFBRUksYUFBYSxFQUFFO1lBQUM7UUFDN0M7UUFFQSxNQUFNSCxXQUFXRixLQUFLRSxRQUFRO1FBUzlCLGtDQUFrQztRQUNsQ0EsU0FBU0ksWUFBWSxHQUFHQyxNQUFNQyxPQUFPLENBQUNOLFNBQVNJLFlBQVksSUFBSUosU0FBU0ksWUFBWSxHQUFHLEVBQUU7UUFDekZKLFNBQVNPLFVBQVUsR0FBR0YsTUFBTUMsT0FBTyxDQUFDTixTQUFTTyxVQUFVLElBQUlQLFNBQVNPLFVBQVUsR0FBRyxFQUFFO1FBQ25GUCxTQUFTUSxZQUFZLEdBQUdILE1BQU1DLE9BQU8sQ0FBQ04sU0FBU1EsWUFBWSxJQUFJUixTQUFTUSxZQUFZLEdBQUcsRUFBRTtRQUN6RlIsU0FBU1MsVUFBVSxHQUFHSixNQUFNQyxPQUFPLENBQUNOLFNBQVNTLFVBQVUsSUFBSVQsU0FBU1MsVUFBVSxHQUFHLEVBQUU7UUFDbkZULFNBQVNVLFNBQVMsR0FBR0wsTUFBTUMsT0FBTyxDQUFDTixTQUFTVSxTQUFTLElBQUlWLFNBQVNVLFNBQVMsR0FBRyxFQUFFO1FBQ2hGVixTQUFTVyxTQUFTLEdBQUdOLE1BQU1DLE9BQU8sQ0FBQ04sU0FBU1csU0FBUyxJQUFJWCxTQUFTVyxTQUFTLEdBQUcsRUFBRTtRQUVoRiw4Q0FBOEM7UUFDOUMsTUFBTUMsY0FDSlosU0FBU0ksWUFBWSxDQUFDUyxNQUFNLEdBQUcsS0FDL0JiLFNBQVNPLFVBQVUsQ0FBQ00sTUFBTSxHQUFHLEtBQzdCYixTQUFTUSxZQUFZLENBQUNLLE1BQU0sR0FBRyxLQUMvQmIsU0FBU1MsVUFBVSxDQUFDSSxNQUFNLEdBQUcsS0FDN0JiLFNBQVNVLFNBQVMsQ0FBQ0csTUFBTSxHQUFHLEtBQzVCYixTQUFTVyxTQUFTLENBQUNFLE1BQU0sR0FBRztRQUU5QixJQUFJLENBQUNELGFBQWE7WUFDaEJYLFFBQVFDLElBQUksQ0FBQztZQUNiLE9BQU9SLHFEQUFZQSxDQUFDSyxJQUFJLENBQUM7Z0JBQUVJLGFBQWEsRUFBRTtZQUFDO1FBQzdDO1FBRUEsdURBQXVEO1FBQ3ZELE1BQU1BLGNBQWNSLGdGQUFtQkEsQ0FBQ0s7UUFFeEMsT0FBT04scURBQVlBLENBQUNLLElBQUksQ0FBQztZQUFFSTtRQUFZO0lBQ3pDLEVBQUUsT0FBT1csT0FBTztRQUNkYixRQUFRYSxLQUFLLENBQUMsa0NBQWtDQTtRQUNoRCxPQUFPcEIscURBQVlBLENBQUNLLElBQUksQ0FBQztZQUFFZSxPQUFPO1FBQWtDLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ3ZGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcam9zaDIwMzBcXERvd25sb2Fkc1xcZnJvbnQgZW5kXFxhcHBcXGFwaVxcZ2VuZXJhdGUtY3V0dGluZy1saXN0XFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIlxuaW1wb3J0IHR5cGUgeyBDYWJpbmV0Rm9ybURhdGEgfSBmcm9tIFwiQC9saWIvdHlwZXNcIlxuaW1wb3J0IHsgZ2VuZXJhdGVDdXR0aW5nTGlzdCB9IGZyb20gXCJAL2xpYi9jdXR0aW5nLWxpc3QtZ2VuZXJhdG9yXCJcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVxdWVzdC5qc29uKClcbiAgICBcbiAgICAvLyBFbnN1cmUgY2FiaW5ldHMgb2JqZWN0IGV4aXN0c1xuICAgIGlmICghZGF0YS5jYWJpbmV0cykge1xuICAgICAgY29uc29sZS53YXJuKFwiTm8gY2FiaW5ldHMgZGF0YSBwcm92aWRlZFwiKVxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgY3V0dGluZ0xpc3Q6IFtdIH0pXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGNhYmluZXRzID0gZGF0YS5jYWJpbmV0cyBhcyB7XG4gICAgICBiYXNlQ2FiaW5ldHM6IENhYmluZXRGb3JtRGF0YVtdXG4gICAgICBjb3JuZXJCYXNlOiBDYWJpbmV0Rm9ybURhdGFbXVxuICAgICAgd2FsbENhYmluZXRzOiBDYWJpbmV0Rm9ybURhdGFbXVxuICAgICAgY29ybmVyV2FsbDogQ2FiaW5ldEZvcm1EYXRhW11cbiAgICAgIHRhbGxVbml0czogQ2FiaW5ldEZvcm1EYXRhW11cbiAgICAgIGVuZFBhbmVsczogQ2FiaW5ldEZvcm1EYXRhW11cbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgYWxsIGNhYmluZXQgYXJyYXlzIGV4aXN0XG4gICAgY2FiaW5ldHMuYmFzZUNhYmluZXRzID0gQXJyYXkuaXNBcnJheShjYWJpbmV0cy5iYXNlQ2FiaW5ldHMpID8gY2FiaW5ldHMuYmFzZUNhYmluZXRzIDogW11cbiAgICBjYWJpbmV0cy5jb3JuZXJCYXNlID0gQXJyYXkuaXNBcnJheShjYWJpbmV0cy5jb3JuZXJCYXNlKSA/IGNhYmluZXRzLmNvcm5lckJhc2UgOiBbXVxuICAgIGNhYmluZXRzLndhbGxDYWJpbmV0cyA9IEFycmF5LmlzQXJyYXkoY2FiaW5ldHMud2FsbENhYmluZXRzKSA/IGNhYmluZXRzLndhbGxDYWJpbmV0cyA6IFtdXG4gICAgY2FiaW5ldHMuY29ybmVyV2FsbCA9IEFycmF5LmlzQXJyYXkoY2FiaW5ldHMuY29ybmVyV2FsbCkgPyBjYWJpbmV0cy5jb3JuZXJXYWxsIDogW11cbiAgICBjYWJpbmV0cy50YWxsVW5pdHMgPSBBcnJheS5pc0FycmF5KGNhYmluZXRzLnRhbGxVbml0cykgPyBjYWJpbmV0cy50YWxsVW5pdHMgOiBbXVxuICAgIGNhYmluZXRzLmVuZFBhbmVscyA9IEFycmF5LmlzQXJyYXkoY2FiaW5ldHMuZW5kUGFuZWxzKSA/IGNhYmluZXRzLmVuZFBhbmVscyA6IFtdXG5cbiAgICAvLyBWYWxpZGF0ZSBpZiB3ZSBoYXZlIGFueSBjYWJpbmV0cyB0byBwcm9jZXNzXG4gICAgY29uc3QgaGFzQ2FiaW5ldHMgPSBcbiAgICAgIGNhYmluZXRzLmJhc2VDYWJpbmV0cy5sZW5ndGggPiAwIHx8IFxuICAgICAgY2FiaW5ldHMuY29ybmVyQmFzZS5sZW5ndGggPiAwIHx8IFxuICAgICAgY2FiaW5ldHMud2FsbENhYmluZXRzLmxlbmd0aCA+IDAgfHwgXG4gICAgICBjYWJpbmV0cy5jb3JuZXJXYWxsLmxlbmd0aCA+IDAgfHwgXG4gICAgICBjYWJpbmV0cy50YWxsVW5pdHMubGVuZ3RoID4gMCB8fCBcbiAgICAgIGNhYmluZXRzLmVuZFBhbmVscy5sZW5ndGggPiAwXG5cbiAgICBpZiAoIWhhc0NhYmluZXRzKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJObyBjYWJpbmV0IGRhdGEgZm91bmQgaW4gcmVxdWVzdFwiKVxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgY3V0dGluZ0xpc3Q6IFtdIH0pXG4gICAgfVxuXG4gICAgLy8gR2VuZXJhdGUgY3V0dGluZyBsaXN0IHVzaW5nIHRoZSBzZXJ2ZXItc2lkZSBmdW5jdGlvblxuICAgIGNvbnN0IGN1dHRpbmdMaXN0ID0gZ2VuZXJhdGVDdXR0aW5nTGlzdChjYWJpbmV0cylcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGN1dHRpbmdMaXN0IH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGdlbmVyYXRpbmcgY3V0dGluZyBsaXN0OlwiLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWQgdG8gZ2VuZXJhdGUgY3V0dGluZyBsaXN0XCIgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG5cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZW5lcmF0ZUN1dHRpbmdMaXN0IiwiUE9TVCIsInJlcXVlc3QiLCJkYXRhIiwianNvbiIsImNhYmluZXRzIiwiY29uc29sZSIsIndhcm4iLCJjdXR0aW5nTGlzdCIsImJhc2VDYWJpbmV0cyIsIkFycmF5IiwiaXNBcnJheSIsImNvcm5lckJhc2UiLCJ3YWxsQ2FiaW5ldHMiLCJjb3JuZXJXYWxsIiwidGFsbFVuaXRzIiwiZW5kUGFuZWxzIiwiaGFzQ2FiaW5ldHMiLCJsZW5ndGgiLCJlcnJvciIsInN0YXR1cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate-cutting-list/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/cutting-list-generator.ts":
/*!***************************************!*\
  !*** ./lib/cutting-list-generator.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateCuttingList: () => (/* binding */ generateCuttingList)\n/* harmony export */ });\nfunction generateCuttingList(cabinets) {\n    const cuttingList = [];\n    // Process base cabinets\n    cabinets.baseCabinets.forEach((cabinet, index)=>{\n        const width = cabinet.width || 0;\n        const type = cabinet.type || \"doors\";\n        const doorConfig = cabinet.doorConfig || \"single\";\n        const drawerCount = cabinet.drawerCount || 2;\n        const quantity = cabinet.quantity || 1;\n        // Side panels\n        cuttingList.push({\n            name: `Base Cabinet ${index + 1} Side Panels`,\n            length: 780,\n            width: 560,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Bottom panel\n        cuttingList.push({\n            name: `Base Cabinet ${index + 1} Bottom Panel`,\n            length: width - 36,\n            width: 560,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Back Ply\n        cuttingList.push({\n            name: `Base Cabinet ${index + 1} Back Ply`,\n            length: width - 6,\n            width: 780,\n            quantity: 1 * quantity,\n            material: \"3mm MDF Backply\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Add shelf only if it's a door type cabinet\n        if (type === \"doors\" || type === \"open\") {\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Shelf`,\n                length: width - 36,\n                width: 560 - 22,\n                quantity: 1 * quantity,\n                material: \"18mm Particle Board\",\n                edging: \"L1\",\n                grooving: \"None\"\n            });\n        }\n        // Screw plate\n        cuttingList.push({\n            name: `Base Cabinet ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 3 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Base Cabinet ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Doors or drawers\n        if (type === \"doors\") {\n            const doorWidth = doorConfig === \"single\" ? width - 5 : (width - 10) / 2;\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Door`,\n                length: 780 - 5,\n                width: doorWidth,\n                quantity: (doorConfig === \"single\" ? 1 : 2) * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n        } else if (type === \"drawers\") {\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Drawer Face`,\n                length: width - 5,\n                width: 222,\n                quantity: drawerCount * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Drawer Sides`,\n                length: 500,\n                width: 200,\n                quantity: 2 * drawerCount * quantity,\n                material: \"18mm Particle Board\",\n                edging: \"L1\",\n                grooving: \"None\"\n            });\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Drawer Back & Front`,\n                length: width - 98,\n                width: 200,\n                quantity: 2 * drawerCount * quantity,\n                material: \"18mm Particle Board\",\n                edging: \"L1\",\n                grooving: \"None\"\n            });\n            cuttingList.push({\n                name: `Base Cabinet ${index + 1} Drawer Bottom`,\n                length: width - 98,\n                width: 414,\n                quantity: drawerCount * quantity,\n                material: \"18mm Particle Board\",\n                edging: \"None\",\n                grooving: \"None\"\n            });\n        }\n    });\n    // Process corner base cabinets\n    cabinets.cornerBase.forEach((cabinet, index)=>{\n        const width = cabinet.cornerBaseWidth || 1100;\n        const quantity = cabinet.quantity || 1;\n        // Side panels\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Side Panels`,\n            length: 780,\n            width: 560,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Bottom panel\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Bottom Panel`,\n            length: width - 36,\n            width: 560,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Back Ply\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Back Ply`,\n            length: width - 17,\n            width: 780 - 8,\n            quantity: 1 * quantity,\n            material: \"3mm MDF Backply\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Shelf\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Shelf`,\n            length: width - 36,\n            width: 560 - 22,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 3 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Door\n        let doorWidth;\n        if (width === 1100) doorWidth = 495;\n        else if (width === 1050) doorWidth = 445;\n        else doorWidth = 395;\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Door`,\n            length: 780 - 5,\n            width: doorWidth,\n            quantity: 1 * quantity,\n            material: \"18mm MDF board\",\n            edging: \"L1,L2,W1,W2\",\n            grooving: \"None\"\n        });\n        // Blanking panel\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Blanking Panel`,\n            length: 744,\n            width: 546,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Blanking strip\n        cuttingList.push({\n            name: `Corner Base ${index + 1} Blanking Strip`,\n            length: 744,\n            width: 80,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n    });\n    // Process wall cabinets\n    cabinets.wallCabinets.forEach((cabinet, index)=>{\n        const width = cabinet.width || 0;\n        const height = cabinet.height || 0;\n        const type = cabinet.wallType || \"single\";\n        const quantity = cabinet.quantity || 1;\n        // Side panels\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Side Panels`,\n            length: height,\n            width: 282,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Top and bottom panels\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Top & Bottom Panels`,\n            length: width - 36,\n            width: 282,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Back Ply\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Back Ply`,\n            length: width - 17,\n            width: height - 17,\n            quantity: 1 * quantity,\n            material: \"3mm MDF Backply\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Shelves\n        const shelfCount = type === \"bifold\" || type === \"gaslift\" ? 2 : 1;\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Shelf`,\n            length: width - 36,\n            width: 282 - 22,\n            quantity: shelfCount * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 3 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Wall Cabinet ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Doors\n        if (type === \"single\" && type !== \"open\") {\n            cuttingList.push({\n                name: `Wall Cabinet ${index + 1} Door`,\n                length: height - 5,\n                width: width - 5,\n                quantity: 1 * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n        } else if (type === \"double\" && type !== \"open\") {\n            cuttingList.push({\n                name: `Wall Cabinet ${index + 1} Door`,\n                length: height - 5,\n                width: (width - 10) / 2,\n                quantity: 2 * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n        } else if ((type === \"gaslift\" || type === \"bifold\") && type !== \"open\") {\n            cuttingList.push({\n                name: `Wall Cabinet ${index + 1} Door`,\n                length: width - 5,\n                width: height / 2 - 35 - 5,\n                quantity: 2 * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n        }\n    });\n    // Process corner wall cabinets\n    cabinets.cornerWall.forEach((cabinet, index)=>{\n        const height = cabinet.cornerWallHeight || 0;\n        const width = cabinet.cornerWallWidth || 0;\n        const quantity = cabinet.quantity || 1;\n        // Side panels\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Side Panels`,\n            length: height,\n            width: 282,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"G1|L2\"\n        });\n        // Top and bottom panels\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Top & Bottom Panels`,\n            length: width - 36,\n            width: 282,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"L2\"\n        });\n        // Back Ply\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Back Ply`,\n            length: width - 17,\n            width: height - 17,\n            quantity: 1 * quantity,\n            material: \"3mm MDF Backply\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Shelf\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Shelf`,\n            length: width - 36,\n            width: 282 - 22,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 3 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Screw plate\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Screw plate`,\n            length: width - 36,\n            width: 100,\n            quantity: 2 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n        // Door\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Door`,\n            length: height - 5,\n            width: width - 297,\n            quantity: 1 * quantity,\n            material: \"18mm MDF board\",\n            edging: \"L1,L2,W1,W2\",\n            grooving: \"None\"\n        });\n        // Blanking panel\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Blanking Panel`,\n            length: height - 36,\n            width: 300,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"None\",\n            grooving: \"None\"\n        });\n        // Blanking strip\n        cuttingList.push({\n            name: `Corner Wall ${index + 1} Blanking Strip`,\n            length: height - 36,\n            width: 80,\n            quantity: 1 * quantity,\n            material: \"18mm Particle Board\",\n            edging: \"L1\",\n            grooving: \"None\"\n        });\n    });\n    // Process tall units\n    cabinets.tallUnits.forEach((cabinet, index)=>{\n        const type = cabinet.tallUnitType || \"fridgeUnit\";\n        const quantity = cabinet.quantity || 1;\n        if (type === \"fridgeUnit\") {\n            processFridgeUnit(cuttingList, cabinet, index, quantity);\n        } else if (type === \"ovenMicrowave\") {\n            processOvenMicrowave(cuttingList, cabinet, index, quantity);\n        } else if (type === \"glassUnit\") {\n            processGlassUnit(cuttingList, cabinet, index, quantity);\n        } else if (type === \"pullout\") {\n            processPullout(cuttingList, cabinet, index, quantity);\n        }\n    });\n    // Process end panels\n    cabinets.endPanels.forEach((panel, index)=>{\n        const type = panel.endPanelType || \"lowLevel\";\n        const quantity = panel.quantity || 1;\n        let length, width;\n        switch(type){\n            case \"lowLevel\":\n                length = 778;\n                width = 579;\n                break;\n            case \"highLevel\":\n                length = (panel.endPanelHeight || 0) - 2;\n                width = 299;\n                break;\n            case \"tallUnits\":\n                length = (panel.endPanelHeight || 0) - 2;\n                width = panel.endPanelDepth === \"600\" ? 599 : 649;\n                break;\n            case \"custom\":\n                length = (panel.endPanelHeight || 0) - 2;\n                width = (panel.endPanelWidth || 0) - 1;\n                break;\n        }\n        cuttingList.push({\n            name: `End Panel ${index + 1}`,\n            length: length,\n            width: width,\n            quantity: 1 * quantity,\n            edging: \"L1,W1,W2\",\n            grooving: \"None\",\n            material: \"18mm MDF board\"\n        });\n    });\n    return cuttingList;\n}\nfunction processFridgeUnit(cuttingList, unit, index, quantity) {\n    const panelHeight = unit.fridgeUnitPanelHeight || 0;\n    const panelDepth = unit.fridgeUnitPanelDepth || 600;\n    const topBoxHeight = unit.fridgeUnitTopBoxHeight || 0;\n    const topBoxDoorType = unit.fridgeUnitTopBoxDoorType || \"flip\";\n    const fridgeBoxWidth = unit.fridgeUnitBoxWidth || 0;\n    // End panels\n    const endPanelWidth = panelDepth === 600 ? 600 : 650;\n    const endPanelLength = panelHeight;\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} End Panels`,\n        length: endPanelLength,\n        width: endPanelWidth - 2,\n        quantity: 2 * quantity,\n        material: \"18mm MDF board\",\n        edging: \"L1,L2,W1,W2\",\n        grooving: \"G1|L2\"\n    });\n    // Side panels\n    const sidePanelWidth = panelDepth - 19;\n    const sidePanelLength = topBoxHeight;\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Side Panels`,\n        length: sidePanelLength,\n        width: sidePanelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Top & Bottom panels\n    const topBottomPanelWidth = panelDepth - 19;\n    const topBottomPanelLength = fridgeBoxWidth - 36;\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Top & Bottom Panels`,\n        length: topBottomPanelLength,\n        width: topBottomPanelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Back Ply\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Back Ply`,\n        length: fridgeBoxWidth - 56,\n        width: topBoxHeight - 20,\n        quantity: 1 * quantity,\n        material: \"3mm MDF Backply\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Screw plates\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Screw Plates `,\n        length: fridgeBoxWidth - 72,\n        width: 80,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Screw Plates `,\n        length: fridgeBoxWidth - 72,\n        width: 80,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Doors\n    const doorWidth = topBoxHeight - 5;\n    let doorLength, doorQuantity;\n    if (topBoxDoorType === \"flip\") {\n        doorLength = fridgeBoxWidth - 41;\n        doorQuantity = 1;\n    } else {\n        doorLength = (fridgeBoxWidth - 46) / 2;\n        doorQuantity = 2;\n    }\n    cuttingList.push({\n        name: `Fridge Unit ${index + 1} Door${doorQuantity > 1 ? \"s\" : \"\"}`,\n        length: doorLength,\n        width: doorWidth,\n        quantity: doorQuantity * quantity,\n        material: \"18mm MDF board\",\n        edging: \"L1,L2,W1,W2\",\n        grooving: \"None\"\n    });\n}\nfunction processOvenMicrowave(cuttingList, unit, index, quantity) {\n    const config = unit.ovenMicrowaveConfig || \"oven\";\n    const drawers = unit.ovenMicrowaveDrawers || 2;\n    const totalHeight = unit.ovenMicrowaveHeight || 0;\n    const depth = unit.ovenMicrowaveDepth || 600;\n    const shelfCount = unit.ovenMicrowaveShelf || 1;\n    const doorsHeight = unit.ovenMicrowaveDoorsHeight || 0;\n    const panelWidth = depth === 600 ? 580 : 630;\n    // Side panels\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Side Panels`,\n        length: totalHeight,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Top & Bottom panels\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Top & Bottom Panels`,\n        length: 564,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Back Ply\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Back Ply`,\n        length: totalHeight - 20,\n        width: 580,\n        quantity: 1 * quantity,\n        material: \"3mm MDF Backply\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Shelf\n    const shelfLength = depth === 600 ? 577 : 628;\n    const baseShelfCount = config === \"micrOven\" ? 3 : 2;\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Shelf`,\n        length: shelfLength,\n        width: 564,\n        quantity: (baseShelfCount + shelfCount) * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Screw plates\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Screw Plate `,\n        length: 564,\n        width: 100,\n        quantity: 5 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Screw Plate `,\n        length: 564,\n        width: 100,\n        quantity: (1 + baseShelfCount + shelfCount) * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Drawers\n    const drawerWidth = drawers === 3 ? 150 : 200;\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Drawer Front & Back`,\n        length: 502,\n        width: drawerWidth,\n        quantity: 4 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Drawer Sides`,\n        length: 500,\n        width: drawerWidth,\n        quantity: 4 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    const drawerFaceWidth = drawers === 3 ? 220 : 350;\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Drawer Face`,\n        length: 595,\n        width: drawerFaceWidth,\n        quantity: drawers * quantity,\n        material: \"18mm MDF board\",\n        edging: \"L1,L2,W1,W2\",\n        grooving: \"None\"\n    });\n    cuttingList.push({\n        name: `Oven/Microwave ${index + 1} Drawer Bottom`,\n        length: 502,\n        width: 464,\n        quantity: drawers * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Doors\n    const doorQuantity = config === \"micrOven\" ? 2 : 1;\n    const doorLength = config === \"oven\" ? 560 : config === \"microwave\" ? 360 : [\n        560,\n        360\n    ];\n    if (Array.isArray(doorLength)) {\n        doorLength.forEach((length, i)=>{\n            cuttingList.push({\n                name: `Oven/Microwave ${index + 1} Door ${i + 1}`,\n                length: length,\n                width: 595,\n                quantity: 1 * quantity,\n                material: \"18mm MDF board\",\n                edging: \"L1,L2,W1,W2\",\n                grooving: \"None\"\n            });\n        });\n    } else {\n        cuttingList.push({\n            name: `Oven/Microwave ${index + 1} Door`,\n            length: doorLength,\n            width: 595,\n            quantity: doorQuantity * quantity,\n            material: \"18mm MDF board\",\n            edging: \"L1,L2,W1,W2\",\n            grooving: \"None\"\n        });\n    }\n    if (doorsHeight > 0) {\n        cuttingList.push({\n            name: `Oven/Microwave ${index + 1} Additional Door`,\n            length: doorsHeight - 5,\n            width: 595,\n            quantity: 1 * quantity,\n            material: \"18mm MDF board\",\n            edging: \"L1,L2,W1,W2\",\n            grooving: \"None\"\n        });\n    }\n}\nfunction processGlassUnit(cuttingList, unit, index, quantity) {\n    const width = unit.glassUnitWidth || 0;\n    const height = unit.glassUnitHeight || 0;\n    const shelves = unit.glassUnitShelves || 1;\n    const depth = unit.glassUnitDepth || 600;\n    const doorType = unit.glassUnitDoorType || \"metalGlass\";\n    const panelWidth = depth === 600 ? 580 : 630;\n    const shelfWidth = depth === 600 ? 576 : 626;\n    // Side panels\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Side Panels`,\n        length: height,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Top & Bottom panels\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Top & Bottom Panels`,\n        length: width - 36,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Back Ply\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Back Ply`,\n        length: height - 20,\n        width: width - 20,\n        quantity: 1 * quantity,\n        material: \"3mm MDF Backply\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Shelves\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Shelves`,\n        length: width - 36,\n        width: shelfWidth,\n        quantity: shelves * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Screw plates\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Screw Plates `,\n        length: width - 36,\n        width: 100,\n        quantity: 4 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Screw plates\n    cuttingList.push({\n        name: `Glass Unit ${index + 1} Screw Plates `,\n        length: width - 36,\n        width: 100,\n        quantity: 2 * shelves * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Doors\n    if (doorType !== \"metalGlass\") {\n        const doorWidth = width <= 600 ? width - 5 : (width - 10) / 2;\n        const doorQuantity = width <= 600 ? 1 : 2;\n        cuttingList.push({\n            name: `Glass Unit ${index + 1} Door${doorQuantity > 1 ? \"s\" : \"\"}`,\n            length: height - 5,\n            width: doorWidth,\n            quantity: doorQuantity * quantity,\n            material: \"18mm MDF board\",\n            edging: \"L1,L2,W1,W2\",\n            grooving: \"None\"\n        });\n    }\n}\nfunction processPullout(cuttingList, unit, index, quantity) {\n    const width = unit.pulloutWidth || 600;\n    const height = unit.pulloutHeight || 0;\n    const depth = unit.pulloutDepth || 600;\n    const panelWidth = depth === 600 ? 580 : 630;\n    const panelLength = width === 600 ? 564 : 414;\n    // Side panels\n    cuttingList.push({\n        name: `Pullout ${index + 1} Side Panels`,\n        length: height,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Top & Bottom panels\n    cuttingList.push({\n        name: `Pullout ${index + 1} Top & Bottom Panels`,\n        length: panelLength,\n        width: panelWidth,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"G1|L2\"\n    });\n    // Back Ply\n    const backPlyWidth = width === 600 ? 580 : 430;\n    cuttingList.push({\n        name: `Pullout ${index + 1} Back Ply`,\n        length: height - 20,\n        width: backPlyWidth,\n        quantity: 1 * quantity,\n        material: \"3mm MDF Backply\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Screw plate\n    cuttingList.push({\n        name: `Pullout ${index + 1} Screw Plates `,\n        length: panelLength,\n        width: 100,\n        quantity: 4 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"None\",\n        grooving: \"None\"\n    });\n    // Screw plate\n    cuttingList.push({\n        name: `Pullout ${index + 1} Screw Plates `,\n        length: panelLength,\n        width: 100,\n        quantity: 2 * quantity,\n        material: \"18mm Particle Board\",\n        edging: \"L1\",\n        grooving: \"None\"\n    });\n    // Door\n    const doorWidth = width === 600 ? 595 : 495;\n    cuttingList.push({\n        name: `Pullout ${index + 1} Door`,\n        length: height - 5,\n        width: doorWidth,\n        quantity: 1 * quantity,\n        material: \"18mm MDF board\",\n        edging: \"L1,L2,W1,W2\",\n        grooving: \"None\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/cutting-list-generator.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgenerate-cutting-list%2Froute&page=%2Fapi%2Fgenerate-cutting-list%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-cutting-list%2Froute.ts&appDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjosh2030%5CDownloads%5Cfront%20end&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();